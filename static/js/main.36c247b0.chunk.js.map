{"version":3,"sources":["core/App/GlobalStyle.js","core/App/theme.js","core/App/index.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","site","background","colorNames","textPrimary","header","border","text","breakpoints","xsmall","small","medium","large","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAEaA,EAAcC,4BAAH,qOAYF,qBAAGC,MAAkBC,OAAOC,KAAKC,cCdjDC,EAIK,UAkBEJ,EAAQ,CACjBC,OAAQ,CACJI,YAAaD,EAEbE,OAAQ,CACJH,WAAYC,EACZG,OAzBF,WA4BFL,KAAM,CACFC,WA9BE,UA+BFK,KAAMJ,IAIdK,YAtBgB,CAChBC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,O,OCdEC,EAAM,WACjB,OACE,eAAC,gBAAD,CAAed,MAAOA,EAAtB,UACE,cAAC,YAAD,IACA,cAACF,EAAD,QCGSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36c247b0.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml  {\n      box-sizing: border-box;\n  }\n  *, ::after, ::before {\n      box-sizing: inherit;\n  }\n\nbody {\n  margin: auto;\n  font-family: 'Poppins', sans-serif;\n  background-color: ${({ theme }) => theme.colors.site.background};\n}\n`;\n","const colorNames = {\n    lightGrey: \"#F5F5FA\",\n    platinum: \"#E5E5E5\",\n    grey: \"#E4E6F0\",\n    black: \"#000000\",\n    darkGrey: \"#7E839A\",\n    white: \"#FFFFFF\",\n    blue: \"#0044CC\",\n    lightBlue: \"#D6E4FF\",\n    yellow: \"#FCD420\",\n    silverSand: \"#C4C4C4\",\n    eerieBlack: \"#18181B\",\n    slateGray: \"#74788B\",\n}\n\nconst breakpoints = {\n    xsmall: 576,\n    small: 768,\n    medium: 992,\n    large: 1200,\n}\n\nexport const theme = {\n    colors: {\n        textPrimary: colorNames.black,\n\n        header: {\n            background: colorNames.black,\n            border: colorNames.grey,\n        },\n\n        site: {\n            background: colorNames.platinum,\n            text: colorNames.black,\n        },\n    },\n\n    breakpoints,\n}","import { ThemeProvider } from \"styled-components\";\nimport { Normalize } from \"styled-normalize\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { theme } from \"./theme\"\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Normalize />\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from '../src/core/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}